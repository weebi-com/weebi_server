syntax = "proto3";

package weebi.contact.service;

import "contact/contact.proto";

import "common/address.proto";
import "common/phone.proto";
import "common/g_common.proto";
import "common/g_timestamp.proto";

service ContactService {
  rpc createOne (ContactRequest) returns (google.retail.common.StatusResponse);
  rpc createMany (ContactsRequest) returns (google.retail.common.StatusResponse);
 
  /// use [lastFetchTimestampUTC] to only read the latest changes since last fetch
  rpc readAll (ReadAllContactsRequest) returns  (ContactsResponse);
  rpc readOne (FindContactRequest) returns (weebi.contact.ContactPb);

  /// == upsert
  rpc updateOne (ContactRequest) returns (google.retail.common.StatusResponse);
  
  /// hard delete
  rpc deleteOne (ContactRequest) returns (google.retail.common.StatusResponse);
}

message FindContactRequest {
  // string firmId = 1 [json_name = 'firmId']; // deduced from bearer token
  string contactChainId = 1 [json_name = 'contactChainId'];
  int32 contactId = 3 [json_name = 'contactId'];
  // optional
  string firstName =  4 [json_name = 'firstName'];
  // optional
  string lastName =  5 [json_name = 'lastName'];
  // optional
  string mail =  6 [json_name = 'mail'];
  // optional
  weebi.common.phone.Phone phone =  7 [json_name = 'phone'];
  // optional
  weebi.common.address.Address address = 8 [json_name = 'addressFull'];
  // will add contact created by userId someday
  // until them below is confusing 
  //  string contactUserId = 2 [json_name = 'contactUserId'];
}

// optional used for weebi_app device back online
message ReadAllContactsRequest {
  string chainId = 1 [json_name = 'chainId'];
  // optional used for weebi_app device back online
  google.protobuf.Timestamp lastFetchTimestampUTC =  2 [json_name = 'lastFetchTimestampUTC']; 
}

message ContactRequest {
  string chainId = 1;
  weebi.contact.ContactPb contact = 2;
}
message ContactsRequest {
  string chainId = 1;
  repeated weebi.contact.ContactPb contacts = 2;
}

message ContactsResponse {
  repeated weebi.contact.ContactPb contacts = 1;

  /// only provided if the request contained lastFetchTimestamp, i.e. if device resync
  /// include all ids so that offline device can delete objects removed by another user/device 
  repeated uint32 ids = 2;
}

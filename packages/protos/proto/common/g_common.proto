/* Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 syntax = "proto3";

package google.retail.common;
// import "google/protobuf/timestamp.proto";

// import "google/protobuf/struct.proto";
import "common/empty.proto";
import "common/g_timestamp.proto";

 // A transfer object suitable for stream and non-stream error
message StatusResponse {
    enum Type {
      SUCCESS = 0;
      ERROR = 1;
      CREATED = 2;
      UPDATED = 3;
      DELETED = 4;
    }
    google.protobuf.Timestamp timestamp = 1 [json_name = 'timestamp']; // google.protobuf.Timestamp
    Type type = 2 [json_name = 'type'];
    string id = 3 [json_name = 'id'];
    string message = 4 [json_name = 'message'];
    // The original payload is used in the error response for clients that MUST
    // implement a backoff / replay. This is consistent with Cloud SLOs
    // google.protobuf.Struct payload = 5 [json_name = 'payload'];
  }
  
  message HealthCheckResponse {
    enum ServingStatus {
      UNKNOWN = 0;
      SERVING = 1;
      NOT_SERVING = 2;
      SERVICE_UNKNOWN = 3;  // Used only by the Watch method.
    }
    ServingStatus status = 1 [json_name = 'status'];
  }
  
  service Status {
    /*
     * Gets service status
     */
    rpc Get(weebi.common.empty.Empty)
        returns (google.retail.common.HealthCheckResponse) ;
       // {
      //option (google.api.http) = {
      //  get: "/api/v1/status"
      //};
     //}
  }
  
syntax = "proto3";

package weebi.article;

message CalibreMongo {
  // faster object read
  weebi.article.CalibrePb calibre = 1 [json_name = 'calibre'] ;  
  int32 calibreUniqueId = 2 [json_name = 'calibreUniqueId'];
  string firmOid = 3 [json_name = 'firmOid'];
  string chainOid = 4 [json_name = 'chainOid'];
  string userOid = 5 [json_name = 'userOid']; 
}

/// Wrapping articles, using Pb to != from Calibre Dart in models weebi 
message CalibrePb {
  enum StockUnit {
    unknown = 0 ;
    centiliter =  1 ;
    centimeter = 2 ;
    gram = 3 ;
    kilogram = 4 ;
    liter = 5 ;
    meter = 6 ;
    unit =  7;
  }
  int32 id = 1 [json_name = 'id'];
  string dateCreation = 2 [json_name = 'creationDate'];
  string dateUpdate = 3 [json_name = 'updateDate'];
  string dateStatus = 4 [json_name = 'statusUpdateDate'];
  bool status = 5 [json_name = 'status'];
  string title = 6 [json_name = 'title'];
  StockUnit stockUnit = 7 [json_name = 'stockUnit'];
  ArticleKindPb kind = 8 [json_name = 'kind'];
  repeated string categories = 9 [json_name = 'categories'];
  repeated ArticleRetailPb articlesRetail = 10 [json_name = 'articlesRetail'];
  repeated ArticleBasketPb articlesBasket = 11 [json_name = 'articlesBasket'];
  reserved 13 to 98;
  // map<string, string> additional_attributes = 99 [json_name = 'additional_attributes'];
}

enum ArticleKindPb {
  unknown = 0 ;
  retail = 1 ;
  basket = 2 ;
  outOfCatalogue = 3 ;
}


message ArticleId {
  int32 calibreId = 1 [json_name = 'calibreId'];
  int32 id = 2 [json_name = 'id'];
}

/// default type of article shortened on ticket
message ArticleRetailOnTicketPb {
  int32 calibreId = 1 [json_name = 'calibreId'];
  int32 id = 2 [json_name = 'id'];
  string designation = 3 [json_name = 'designation'];
  double price = 4 [json_name = 'price'];
  double cost = 5 [json_name = 'cost'];
  double unitsInOnePiece = 6 [json_name = 'unitsInOnePiece'];
}

/// default type of article
message ArticleRetailPb {
  int32 calibreId = 1 [json_name = 'calibreId'];
  int32 id = 2 [json_name = 'id'];
  string designation = 3 [json_name = 'designation'];
  ArticleKindPb kind = 4 [json_name = 'kind'];
  bool status = 5 [json_name = 'status'];
  int32 codeShortcut = 6 [json_name = 'articleCode'];
  string dateCreation = 7 [json_name = 'creationDate'];
  string dateUpdate = 8 [json_name = 'updateDate'];
  string dateStatus = 9 [json_name = 'statusUpdateDate'];
  double price = 10 [json_name = 'price'];
  double cost = 11 [json_name = 'cost'];
  double unitsInOnePiece = 12 [json_name = 'unitsInOnePiece'];
  string barcodeEAN = 13 [json_name = 'barcodeEAN'];
}

// a basket of several articles,  a basket cannot contain other baskets
message ArticleBasketPb {
  int32 calibreId = 1 [json_name = 'calibreId'];
  int32 id = 2 [json_name = 'id'];
  string designation = 3 [json_name = 'designation'];
  ArticleKindPb kind = 4 [json_name = 'kind'];
  bool status = 5 [json_name = 'status'];
  int32 codeShortcut = 6 [json_name = 'articleCode'];
  string dateCreation = 7 [json_name = 'creationDate'];
  string dateUpdate = 8 [json_name = 'updateDate'];
  string dateStatus = 9 [json_name = 'statusUpdateDate'];
  repeated ProxyArticlePb proxies = 10 [json_name = 'proxies'];
  double discountAmount = 11 [json_name = 'discountAmountSalesOnly'];
  double markupAmount = 12 [json_name = 'markupAmountSalesOnly'];
}

message ArticleBasketOnTicketPb {
  int32 calibreId = 1 [json_name = 'calibreId'];
  int32 id = 2 [json_name = 'id'];
  string designation = 3 [json_name = 'designation'];
  repeated ProxyArticlePb proxies = 4 [json_name = 'proxies'];
  double discountAmount = 5 [json_name = 'discountAmountSalesOnly'];
  double markupAmount = 6 [json_name = 'markupAmountSalesOnly'];
}

// each article included in the ArticleBasket is referenced using the proxy
message ProxyArticlePb {
  int32 calibreId = 1 [json_name = 'calibreId'];
  int32 articleId = 2 [json_name = 'articleId'];
  int32 id = 3 [json_name = 'id'];
  bool status = 4 [json_name = 'status'];
  int32 proxyCalibreId = 5 [json_name = 'proxyCalibreId'];
  int32 proxyArticleId = 6 [json_name = 'proxyArticleId'];
  double minimumUnitPerBasket = 7 [json_name = 'minimumUnitPerBasket'];
  double articleWeight = 8 [json_name = 'articleWeight'];
}